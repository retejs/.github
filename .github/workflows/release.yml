name: Release

on:
  workflow_call:
    inputs:
      dist:
        description: 'Dist folder'
        default: './dist'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm ci
      - run: npm run test --if-present
      - run: npm run lint --if-present
      - run: npm run build
      - run: npm i -g @semantic-release/changelog@6
      - name: Create/append npmignore
        run: |
          echo $FILE_DATA >> "$FILE_NAME"
        env:
          FILE_NAME: "${{ inputs.dist }}/.npmignore"
          FILE_DATA: "release.config.js"
      - name: Create release config
        run: |
          echo $FILE_DATA > "$FILE_NAME"
        env:
          FILE_NAME: "${{ inputs.dist }}/release.config.js"
          FILE_DATA: |
            module.exports = {
              branches: ['main', { name: 'beta', channel: 'beta', prerelease: 'beta' }],
              plugins: [
                '@semantic-release/commit-analyzer',
                '@semantic-release/release-notes-generator',
                '@semantic-release/changelog',
                '@semantic-release/github',
                ["@semantic-release/npm"]
              ]
            };
      
      - name: Copy changelog
        if: ${{ inputs.dist != '.' }}
        run: cp -fr ./CHANGELOG.md ${{ inputs.dist }}
        
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          working_directory: ${{ inputs.dist }}
          semantic_version: 18
          extra_plugins: |
            @semantic-release/changelog@6
        env:
          RUNNER_DEBUG: 1
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    
      - name: Copy changelog
        if: ${{ inputs.dist != '.' }}
        run: cp -fr ${{ inputs.dist }}/CHANGELOG.md .
      
      - run: cat CHANGELOG.md
      - name: Commit version
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          npm version ${{ steps.semantic.outputs.new_release_version }} --no-git-tag-version --no-commit-hooks
          git config --local user.email rete-js[bot]@users.noreply.github.com
          git config --local user.name rete-js[bot]
          git add .
          git commit -m "chore(release): ${{ steps.semantic.outputs.new_release_version }}"
    
      - name: Push changes
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
          branch: ${{ github.ref }}
